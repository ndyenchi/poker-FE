import { Directive, ElementRef, NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';

class NgxCopyPasteDirective {
    constructor(_elementRef) {
        this._elementRef = _elementRef;
    }
    copy() {
        let select = window.getSelection();
        if (select) {
            select.removeAllRanges();
        }
        const element = this._elementRef.nativeElement;
        if (element instanceof HTMLInputElement ||
            element instanceof HTMLTextAreaElement) {
            this._elementRef.nativeElement.select();
        }
        else {
            const range = document.createRange();
            range.selectNodeContents(this._elementRef.nativeElement);
            select = window.getSelection();
            if (select) {
                select.addRange(range);
            }
        }
        document.execCommand('copy');
    }
}
NgxCopyPasteDirective.decorators = [
    { type: Directive, args: [{
                selector: '[ngxCopyPaste]',
                exportAs: 'copy'
            },] }
];
NgxCopyPasteDirective.ctorParameters = () => [
    { type: ElementRef }
];

class NgxCopyPasteModule {
}
NgxCopyPasteModule.decorators = [
    { type: NgModule, args: [{
                declarations: [NgxCopyPasteDirective],
                imports: [
                    CommonModule
                ],
                exports: [NgxCopyPasteDirective]
            },] }
];

/**
 * Generated bundle index. Do not edit.
 */

export { NgxCopyPasteDirective, NgxCopyPasteModule };
//# sourceMappingURL=ngx-copypaste.js.map
